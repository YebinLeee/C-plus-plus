// 4장 실습문제#include <iostream>#include <string>#include <ctime> // 난수 생성을 위한 time/stdlib 헤더#include <cstdlib>using namespace std;class Color {	int red, green, blue;public:	Color() { red = green = blue = 0; }	Color(int r, int g, int b) { red = r; green = g; blue = b; }	void setColor(int r, int g, int b) { red = r; green = g; blue = b; }	void show() { cout << red << ' ' << green << ' ' << blue << endl; }};void p1() {	Color screenColor(255, 0, 0);	// 빨간색의 screenColor 객체 생성	Color* p; // 클래스 객체의 포인터 변수	p = &screenColor;	p->show(); // 객체의 멤버 함수 대입	Color colors[3]; // 클래스 객체의 배열 선언(자동으로 포인터 변수[배열의 이름] 생성)	p = colors; // 객체 배열 대입	p[0].setColor(255, 0, 0); // 배열의 첫번째 요소를 빨강으로 설정	p[1].setColor(0, 255, 0); // 배열의 두번째 요소를 초록으로 설정	p[2].setColor(0, 0, 255); // 배열의 세번째 요소를 파랑으로 설정	for (int i = 0; i < 3; i++)		p[i].show();	// 사용자에에 직접 입력받아(문자열 또는 hex code로) 출력하기	// hex code에 따라 빨, 초, 파를 출력하기}void p2() {	int* intA = new int[5];	int total = 0; // 아예 처음부터 double 형으로 만들어도 됨	for (int i = 0; i < 5; i++) {		cin >> intA[i];		total += intA[i];	}	cout << "평균 "<< total / 5.0; // total/5.0도 가능 or 강제 형변환 (double)sum/5	delete[] intA; // 소멸자 호출}#include <string>void p3() {	int cnt = 0;	string text;	char target = 'a';	cout << "문자열 입력>>";	getline(cin, text);	for (int i = 0; text.length(); i++) // text.length()==text.size()	{		if (text.at(i)==target)		{			cnt++;		}	}	cout << "문자 " << target << "은 " << cnt << "개 있습니다." << endl;}class Sample {	int* p;	int size;public:	Sample(int n) { // 생성자		size = n; p = new int[n]; // n개 정수 배열의 동적 생성	}	void read(); // 동적 할당받은 정수 배열 p에 사용자로부터 정수를 입력 받음	void write(); // 정수 배열을 화면에 출력	int big(); // 정수 배열에서 가장 큰 수 리턴	~Sample(); // 소멸자};void Sample::read() {	for (int i = 0; i < size; i++)		cin >> p[i];}void Sample::write() {	for (int i = 0; i < size; i++)		cout << p[i] << ' ';}int Sample::big() {	int max=p[0];	for (int i = 1; i < size; i++) {		if (p[i] > max) max = p[i];		// max=(max<p[i])?p[i]:max;	}	return max;}Sample::~Sample() {	delete[]p;}void p4() {	Sample s(10); // 10개 정수 배열을 가진 Sample 객체 생성	s.read(); // 키보드에서 정수 배열 읽기	s.write(); // 정수 배열 출력	cout << "가장 큰 수는 " << s.big() << endl; // 가장 큰 수 출력	}
void p5() {	string text;	srand((unsigned)time(NULL));		while (true) {		cout << "아래에 한 줄을 입력하세요.(exit를 입력하면 종료합니다)" << endl << ">>";		getline(cin, text);		if (text == "exit") break; // (text.compare("exit"))		cout << text;		int ran = rand() % text.length(); // 길이로 나누어주면 인덱스값까지 가능		int ch = rand() % 26;		// text[ran]= text[rand()%26];				// 알파벳 총 개수가 26개임을 참고 (rand()%25+ASCII_A) #define ASCII_A 97 소문자 a를 더한 것		char changeCh = ch+ 'a';		if (text[ran] == changeCh)			changeCh = changeCh + 'A';		text[ran] = changeCh;				cout << ">>"<<text<<endl;	}}void p6() {	string text;	cout << "아래에 한 줄을 입력하세요.(exit를 입력하면 종료합니다)" << endl;	while (true) {		cout << ">>";		getline(cin, text);		if (text == "exit")			break;		int size = text.length();
		for (int i = size-1; i >= 0; i--)
			cout << text[i];
		cout << endl;
	}}int main() {	// p1();	// p2();	// p3();	//p4();
	//p5();
	p6();
}

